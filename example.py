#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ï‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏ö‡∏µ‡∏ö‡∏≠‡∏±‡∏î‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
"""

from video_processor import VideoProcessor
import time

def quick_demo():
    """‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡πá‡∏ß"""
    print("üé¨ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ï‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏ö‡∏µ‡∏ö‡∏≠‡∏±‡∏î‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠")
    print("=" * 60)
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á processor
    processor = VideoProcessor(
        input_folder="input_vdo",
        output_folder="output_vdo"
    )
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
    video_files = processor.get_video_files()
    print(f"üìπ ‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠: {len(video_files)} ‡πÑ‡∏ü‡∏•‡πå")
    
    if not video_files:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô folder input_vdo")
        return
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏£‡∏Å
    first_video = video_files[0]
    video_info = processor.get_video_info(first_video)
    
    print(f"\nüìÑ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: {first_video}")
    print(f"   ‚è±Ô∏è  ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß: {processor.format_time(video_info['duration'])}")
    print(f"   üìÅ ‡∏Ç‡∏ô‡∏≤‡∏î: {video_info['file_size_mb']:.1f} MB")
    print(f"   üìä Bitrate: {video_info['bitrate']//1000}k")

def custom_processing():
    """‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏≠‡∏á"""
    print("\nüõ†Ô∏è  ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÅ‡∏ö‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á")
    print("-" * 60)
    
    # ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ
    settings = [
        {"name": "‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏•‡πá‡∏Å (SNS)", "duration": 30, "size": 5, "quality": "fast"},
        {"name": "‡πÑ‡∏ü‡∏•‡πå‡∏Å‡∏•‡∏≤‡∏á (YouTube)", "duration": 300, "size": 25, "quality": "medium"},
        {"name": "‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏ç‡πà (Archive)", "duration": 600, "size": 100, "quality": "slow"}
    ]
    
    for i, setting in enumerate(settings, 1):
        print(f"{i}. {setting['name']}")
        print(f"   - ‡∏ï‡∏±‡∏î‡∏ó‡∏∏‡∏Å {setting['duration']} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
        print(f"   - ‡∏Ç‡∏ô‡∏≤‡∏î‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î {setting['size']} MB")
        print(f"   - ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û: {setting['quality']}")

def batch_processing_example():
    """‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÅ‡∏ö‡∏ö batch"""
    print("\nüîÑ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏´‡∏•‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå")
    print("-" * 60)
    
    processor = VideoProcessor()
    
    # ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô‡πÅ‡∏ö‡∏ö batch
    result = processor.process_all_videos(
        segment_duration=180,  # 3 ‡∏ô‡∏≤‡∏ó‡∏µ
        max_size_mb=15,        # 15 MB
        quality_preset="medium"
    )
    
    print(f"üìä ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:")
    print(f"   ‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {result['processed']} ‡πÑ‡∏ü‡∏•‡πå")
    print(f"   ‚ùå ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: {result['failed']} ‡πÑ‡∏ü‡∏•‡πå")
    print(f"   ‚è±Ô∏è  ‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏ß‡∏°: {result['time_taken']:.1f} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")

if __name__ == "__main__":
    try:
        # ‡∏£‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
        quick_demo()
        custom_processing()
        
        # ‡∏ñ‡∏≤‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô‡∏à‡∏£‡∏¥‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        print("\n" + "=" * 60)
        choice = input("ü§î ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏à‡∏£‡∏¥‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (y/N): ").lower()
        
        if choice in ['y', 'yes', '‡πÉ‡∏ä‡πà']:
            batch_processing_example()
        else:
            print("üí° ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô‡∏à‡∏£‡∏¥‡∏á ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á:")
            print("   python video_processor.py --interactive")
            
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è  ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å")
    except Exception as e:
        print(f"\n‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
