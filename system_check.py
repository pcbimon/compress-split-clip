"""
‡∏ï‡∏±‡∏ß‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏±‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
"""
import subprocess
import sys
import os
from pathlib import Path

def check_python():
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Python version"""
    try:
        version = sys.version_info
        if version.major >= 3 and version.minor >= 7:
            print(f"‚úì Python {version.major}.{version.minor}.{version.micro}")
            return True
        else:
            print(f"‚ùå Python version ‡∏ï‡πà‡∏≥‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ: {version.major}.{version.minor}")
            print("üì• ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ Python 3.7 ‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ")
            return False
    except Exception as e:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Python ‡πÑ‡∏î‡πâ: {e}")
        return False

def check_ffmpeg():
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö FFmpeg"""
    try:
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ffmpeg
        result = subprocess.run(['ffmpeg', '-version'], 
                              capture_output=True, text=True, timeout=10)
        if result.returncode == 0:
            # ‡∏´‡∏≤‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô
            version_line = result.stdout.split('\n')[0]
            print(f"‚úì {version_line}")
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ffprobe
            probe_result = subprocess.run(['ffprobe', '-version'], 
                                        capture_output=True, text=True, timeout=10)
            if probe_result.returncode == 0:
                print("‚úì FFprobe ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
                return True
            else:
                print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö FFprobe")
                return False
        else:
            print("‚ùå FFmpeg ‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
            return False
            
    except FileNotFoundError:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö FFmpeg")
        print_ffmpeg_install_guide()
        return False
    except subprocess.TimeoutExpired:
        print("‚ùå FFmpeg ‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡∏ä‡πâ‡∏≤")
        return False
    except Exception as e:
        print(f"‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö FFmpeg: {e}")
        return False

def print_ffmpeg_install_guide():
    """‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á FFmpeg"""
    print("\nüì• ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á FFmpeg:")
    print("1. ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å: https://ffmpeg.org/download.html")
    print("2. ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Windows:")
    print("   - ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î 'Windows builds by BtbN'")
    print("   - ‡πÅ‡∏ï‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á C:\\ffmpeg")
    print("   - ‡πÄ‡∏û‡∏¥‡πà‡∏° C:\\ffmpeg\\bin ‡πÉ‡∏ô System PATH")
    print("3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö: ‡πÄ‡∏õ‡∏¥‡∏î Command Prompt ‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå 'ffmpeg -version'")

def check_dependencies():
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Python packages"""
    required_packages = ['ffmpeg-python', 'tqdm']
    missing_packages = []
    
    for package in required_packages:
        try:
            __import__(package.replace('-', '_'))
            print(f"‚úì {package}")
        except ImportError:
            missing_packages.append(package)
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö {package}")
    
    if missing_packages:
        print(f"\nüì¶ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á packages ‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î:")
        print(f"pip install {' '.join(missing_packages)}")
        return False
    
    return True

def check_folders():
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô"""
    folders = ['input_vdo', 'output_vdo']
    
    for folder in folders:
        path = Path(folder)
        if not path.exists():
            path.mkdir(exist_ok=True)
            print(f"üìÅ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå: {folder}")
        else:
            print(f"‚úì ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå {folder} ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
    
    return True

def check_video_files():
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÉ‡∏ô input folder"""
    input_folder = Path('input_vdo')
    video_extensions = ['.mp4', '.avi', '.mov', '.mkv', '.wmv', '.flv', '.webm', '.m4v']
    
    video_files = []
    for ext in video_extensions:
        video_files.extend(input_folder.glob(f'*{ext}'))
        video_files.extend(input_folder.glob(f'*{ext.upper()}'))
    
    if video_files:
        print(f"üìπ ‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠: {len(video_files)} ‡πÑ‡∏ü‡∏•‡πå")
        for video in video_files[:5]:  # ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏Ñ‡πà 5 ‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏£‡∏Å
            size_mb = video.stat().st_size / (1024 * 1024)
            print(f"   - {video.name} ({size_mb:.1f} MB)")
        if len(video_files) > 5:
            print(f"   ... ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å {len(video_files) - 5} ‡πÑ‡∏ü‡∏•‡πå")
    else:
        print("‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÉ‡∏ô input_vdo/")
        print("üì• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ß‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÉ‡∏ô input_vdo/ ‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏±‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°")
    
    return len(video_files) > 0

def main():
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"""
    print("üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö")
    print("=" * 50)
    
    checks = [
        ("Python", check_python),
        ("FFmpeg", check_ffmpeg),
        ("Python Packages", check_dependencies),
        ("‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå", check_folders),
        ("‡πÑ‡∏ü‡∏•‡πå‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠", check_video_files)
    ]
    
    all_good = True
    
    for name, check_func in checks:
        print(f"\nüîé ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö {name}:")
        if not check_func():
            all_good = False
    
    print("\n" + "=" * 50)
    if all_good:
        print("üéâ ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!")
        print("üöÄ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß:")
        print("   python video_processor.py --interactive")
    else:
        print("‚ö†Ô∏è  ‡∏û‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
    
    return all_good

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è  ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å")
    except Exception as e:
        print(f"\n‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        
    input("\n‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏¥‡∏î...")
